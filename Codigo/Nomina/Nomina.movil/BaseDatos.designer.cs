#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.225
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nomina.movil
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class BaseDatosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertPersona(Persona instance);
    partial void UpdatePersona(Persona instance);
    partial void DeletePersona(Persona instance);
    partial void InsertTipoTrabajador(TipoTrabajador instance);
    partial void UpdateTipoTrabajador(TipoTrabajador instance);
    partial void DeleteTipoTrabajador(TipoTrabajador instance);
    partial void InsertIngresos(Ingresos instance);
    partial void UpdateIngresos(Ingresos instance);
    partial void DeleteIngresos(Ingresos instance);
    partial void InsertTipoHora(TipoHora instance);
    partial void UpdateTipoHora(TipoHora instance);
    partial void DeleteTipoHora(TipoHora instance);
    #endregion
		
		public BaseDatosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		

		
		public BaseDatosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		

		
		public System.Data.Linq.Table<Persona> Persona
		{
			get
			{
				return this.GetTable<Persona>();
			}
		}
		
		public System.Data.Linq.Table<TipoTrabajador> TipoTrabajador
		{
			get
			{
				return this.GetTable<TipoTrabajador>();
			}
		}
		
		public System.Data.Linq.Table<Ingresos> Ingresos
		{
			get
			{
				return this.GetTable<Ingresos>();
			}
		}
		
		public System.Data.Linq.Table<TipoHora> TipoHora
		{
			get
			{
				return this.GetTable<TipoHora>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Cedula;
		
		private string _Nombre;
		
		private int _Salario;
		
		private int _VlrDia;
		
		private int _VlrHora;
		
		private string _IdTipoTrabajador;
		
		private EntityRef<TipoTrabajador> _TipoTrabajador;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnSalarioChanging(int value);
    partial void OnSalarioChanged();
    partial void OnVlrDiaChanging(int value);
    partial void OnVlrDiaChanged();
    partial void OnVlrHoraChanging(int value);
    partial void OnVlrHoraChanged();
    partial void OnIdTipoTrabajadorChanging(string value);
    partial void OnIdTipoTrabajadorChanged();
    #endregion
		
		public Persona()
		{
			this._TipoTrabajador = default(EntityRef<TipoTrabajador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", CanBeNull=false, IsPrimaryKey=true)]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salario")]
		public int Salario
		{
			get
			{
				return this._Salario;
			}
			set
			{
				if ((this._Salario != value))
				{
					this.OnSalarioChanging(value);
					this.SendPropertyChanging();
					this._Salario = value;
					this.SendPropertyChanged("Salario");
					this.OnSalarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VlrDia")]
		public int VlrDia
		{
			get
			{
				return this._VlrDia;
			}
			set
			{
				if ((this._VlrDia != value))
				{
					this.OnVlrDiaChanging(value);
					this.SendPropertyChanging();
					this._VlrDia = value;
					this.SendPropertyChanged("VlrDia");
					this.OnVlrDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VlrHora")]
		public int VlrHora
		{
			get
			{
				return this._VlrHora;
			}
			set
			{
				if ((this._VlrHora != value))
				{
					this.OnVlrHoraChanging(value);
					this.SendPropertyChanging();
					this._VlrHora = value;
					this.SendPropertyChanged("VlrHora");
					this.OnVlrHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoTrabajador", CanBeNull=false)]
		public string IdTipoTrabajador
		{
			get
			{
				return this._IdTipoTrabajador;
			}
			set
			{
				if ((this._IdTipoTrabajador != value))
				{
					if (this._TipoTrabajador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoTrabajadorChanging(value);
					this.SendPropertyChanging();
					this._IdTipoTrabajador = value;
					this.SendPropertyChanged("IdTipoTrabajador");
					this.OnIdTipoTrabajadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoTrabajador_Persona", Storage="_TipoTrabajador", ThisKey="IdTipoTrabajador", OtherKey="ID", IsForeignKey=true)]
		public TipoTrabajador TipoTrabajador
		{
			get
			{
				return this._TipoTrabajador.Entity;
			}
			set
			{
				TipoTrabajador previousValue = this._TipoTrabajador.Entity;
				if (((previousValue != value) 
							|| (this._TipoTrabajador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoTrabajador.Entity = null;
						previousValue.Persona.Remove(this);
					}
					this._TipoTrabajador.Entity = value;
					if ((value != null))
					{
						value.Persona.Add(this);
						this._IdTipoTrabajador = value.ID;
					}
					else
					{
						this._IdTipoTrabajador = default(string);
					}
					this.SendPropertyChanged("TipoTrabajador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class TipoTrabajador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Descripcion;
		
		private EntitySet<Persona> _Persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoTrabajador()
		{
			this._Persona = new EntitySet<Persona>(new Action<Persona>(this.attach_Persona), new Action<Persona>(this.detach_Persona));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoTrabajador_Persona", Storage="_Persona", ThisKey="ID", OtherKey="IdTipoTrabajador")]
		public EntitySet<Persona> Persona
		{
			get
			{
				return this._Persona;
			}
			set
			{
				this._Persona.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Persona(Persona entity)
		{
			this.SendPropertyChanging();
			entity.TipoTrabajador = this;
		}
		
		private void detach_Persona(Persona entity)
		{
			this.SendPropertyChanging();
			entity.TipoTrabajador = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Ingresos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Identificador;
		
		private System.DateTime _Fecha;
		
		private System.Nullable<long> _Deducciones;
		
		private string _TipoLabor;
		
		private long _Cantidad;
		
		private string _Empresa;
		
		private EntityRef<TipoHora> _TipoHora;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdentificadorChanging(int value);
    partial void OnIdentificadorChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnDeduccionesChanging(System.Nullable<long> value);
    partial void OnDeduccionesChanged();
    partial void OnTipoLaborChanging(string value);
    partial void OnTipoLaborChanged();
    partial void OnCantidadChanging(long value);
    partial void OnCantidadChanged();
    partial void OnEmpresaChanging(string value);
    partial void OnEmpresaChanged();
    #endregion
		
		public Ingresos()
		{
			this._TipoHora = default(EntityRef<TipoHora>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identificador", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public int Identificador
		{
			get
			{
				return this._Identificador;
			}
			set
			{
				if ((this._Identificador != value))
				{
					this.OnIdentificadorChanging(value);
					this.SendPropertyChanging();
					this._Identificador = value;
					this.SendPropertyChanged("Identificador");
					this.OnIdentificadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deducciones")]
		public System.Nullable<long> Deducciones
		{
			get
			{
				return this._Deducciones;
			}
			set
			{
				if ((this._Deducciones != value))
				{
					this.OnDeduccionesChanging(value);
					this.SendPropertyChanging();
					this._Deducciones = value;
					this.SendPropertyChanged("Deducciones");
					this.OnDeduccionesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoLabor", CanBeNull=false)]
		public string TipoLabor
		{
			get
			{
				return this._TipoLabor;
			}
			set
			{
				if ((this._TipoLabor != value))
				{
					if (this._TipoHora.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoLaborChanging(value);
					this.SendPropertyChanging();
					this._TipoLabor = value;
					this.SendPropertyChanged("TipoLabor");
					this.OnTipoLaborChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad")]
		public long Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empresa")]
		public string Empresa
		{
			get
			{
				return this._Empresa;
			}
			set
			{
				if ((this._Empresa != value))
				{
					this.OnEmpresaChanging(value);
					this.SendPropertyChanging();
					this._Empresa = value;
					this.SendPropertyChanged("Empresa");
					this.OnEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoHora_Ingresos", Storage="_TipoHora", ThisKey="TipoLabor", OtherKey="Id", IsForeignKey=true)]
		public TipoHora TipoHora
		{
			get
			{
				return this._TipoHora.Entity;
			}
			set
			{
				TipoHora previousValue = this._TipoHora.Entity;
				if (((previousValue != value) 
							|| (this._TipoHora.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoHora.Entity = null;
						previousValue.Ingresos.Remove(this);
					}
					this._TipoHora.Entity = value;
					if ((value != null))
					{
						value.Ingresos.Add(this);
						this._TipoLabor = value.Id;
					}
					else
					{
						this._TipoLabor = default(string);
					}
					this.SendPropertyChanged("TipoHora");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class TipoHora : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Descripcion;
		
		private EntitySet<Ingresos> _Ingresos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoHora()
		{
			this._Ingresos = new EntitySet<Ingresos>(new Action<Ingresos>(this.attach_Ingresos), new Action<Ingresos>(this.detach_Ingresos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoHora_Ingresos", Storage="_Ingresos", ThisKey="Id", OtherKey="TipoLabor")]
		public EntitySet<Ingresos> Ingresos
		{
			get
			{
				return this._Ingresos;
			}
			set
			{
				this._Ingresos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ingresos(Ingresos entity)
		{
			this.SendPropertyChanging();
			entity.TipoHora = this;
		}
		
		private void detach_Ingresos(Ingresos entity)
		{
			this.SendPropertyChanging();
			entity.TipoHora = null;
		}
	}
}
#pragma warning restore 1591
